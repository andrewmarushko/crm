@import "variables.scss";

@mixin shadow-radius($shadow, $shadow-color) {
  border-radius: 8px;
  box-shadow: $shadow $shadow-color;
}

@mixin media-screen($breakpoint) {
  $breakpoints: (
    xs: (
      max-width: $xs-max,
    ),
    sm: (
      min-width: $sm-min,
    )
    and
    (
      max-width: $sm-max,
    ),
    md: (
      min-width: $md-min,
    )
    and
    (
      max-width: $md-max,
    ),
    lg: (
      min-width: $lg-min,
    )
    and
    (
      max-width: $lg-max,
    ),
    xl: (
      min-width: $xl-min,
    ),
  );

  @each $point, $query in $breakpoints {
    @if $breakpoint == $point {
      @media #{$query} {
        @content;
      }
    }
  }
}

@mixin typography(
  $font-size,
  $line-height: 1.75,
  $font-weight: 400,
  $letter-spacing: 0,
  $mobile-font-size: $font-size * 0.85,
  $mobile-line-height: $line-height
) {
  font-size: $font-size;
  line-height: $line-height;
  font-weight: $font-weight;
  letter-spacing: $letter-spacing;
  font-family: $font-stack;

  @media (max-width: 767px) {
    font-size: $mobile-font-size;
    line-height: $mobile-line-height;
  }
}

@mixin spacing($size) {
  $font-size: 16px;
  margin: ($size + 4) * ($font-size / 16);
  padding: ($size + 4) * ($font-size / 16);
}

@mixin container(
  $widths: (
    sm: 720px,
    md: 960px,
    lg: 1140px,
  ),
  $width: auto
) {
  width: $width;
  max-width: 100%;
  margin: 0 auto;

  @each $breakpoint, $value in $widths {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      max-width: $value;
      width: $value;
    }
  }

  @media (max-width: map-get($breakpoints, sm)) {
    width: 100%;
  }
}
